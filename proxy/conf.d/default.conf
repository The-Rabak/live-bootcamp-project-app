# ------------------------------------------
# 1) Redirect direct traffic on port 3000 → /auth/
# ------------------------------------------
server {
    listen 3000;
    listen [::]:3000;
    server_name _;
    return 301 https://$host/auth$request_uri;
}

# ------------------------------------------
# 2) Redirect direct traffic on port 8000 → /app/
# ------------------------------------------
server {
    listen 8000;
    listen [::]:8000;
    server_name _;
    return 301 https://$host/app$request_uri;
}

# ----------------------------------------
# 3) Redirect HTTP (80) → HTTPS (443)
# ----------------------------------------
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

# ------------------------------------------
# 4) HTTPS Server on 443 with HTTP/2
# ------------------------------------------
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name _;

    ssl_certificate     /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;

    # APP SERVICE
    location ^~ /app/ {
        proxy_pass         http://app-service:8000/;
        proxy_set_header   Host               $host;
        proxy_set_header   X-Real-IP          $remote_addr;
        proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto  $scheme;
    }
    location = /app {
        return 301 /app/;
    }

    # AUTH SERVICE
    location ^~ /auth/ {
        proxy_pass         http://auth-service:3000/;
        proxy_set_header   Host               $host;
        proxy_set_header   X-Real-IP          $remote_addr;
        proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto  $scheme;
    }
    location = /auth {
        return 301 /auth/;
    }

    # STATIC ASSETS for APP SERVICE
    location ^~ /assets/ {
        proxy_pass         http://app-service:8000/assets/;
        proxy_set_header   Host               $host;
        proxy_set_header   X-Real-IP          $remote_addr;
        proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto  $scheme;
    }

    # STATIC ASSETS for AUTH SERVICE
    location ~* ^/[^/]+\.(?:js|css|png|jpe?g|gif|ico|json|html)$ {
        proxy_pass         http://auth-service:3000;
        proxy_set_header   Host               $host;
        proxy_set_header   X-Real-IP          $remote_addr;
        proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto  $scheme;
    }
}